name: build

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - platform: android
            os: ubuntu-latest
          - platform: windows
            os: windows-latest
            arch: amd64
          - platform: linux
            os: ubuntu-latest
            arch: amd64
          - platform: macos
            os: macos-13
            arch: amd64
          - platform: macos
            os: macos-latest
            arch: arm64

    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: 设置 Java 环境（仅 Android）
        if: startsWith(matrix.platform,'android')
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: 设置 NDK 环境（仅 Android）
        if: startsWith(matrix.platform,'android')
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r26b
          add-to-path: true
          link-to-sdk: true

      - name: 设置 Android 签名（仅 Android）
        if: startsWith(matrix.platform,'android')
        run: |
          echo "${{ secrets.KEYSTORE }}" | base64 --decode > android/app/keystore.jks
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/local.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/local.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/local.properties

      - name: 设置 Go 环境
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
          cache-dependency-path: |
            core/go.sum

      - name: 设置 Flutter 环境
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.24.5
          channel: stable
          cache: true

      - name: 获取 Flutter 依赖
        run: flutter pub get

      - name: 构建应用
        run: |
          # 执行构建命令
          dart setup.dart ${{ matrix.platform }} ${{ matrix.arch && format('--arch {0}', matrix.arch) }}
          # 检查构建输出目录并打印日志，方便调试
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            powershell -Command "Write-Host '构建完成，正在检查输出目录 ./dist 的内容：'; Get-ChildItem ./dist -ErrorAction SilentlyContinue; if ($?) { Write-Host '构建成功' } else { Write-Host '错误：构建失败，./dist 目录不存在或为空' }"
          else
            echo "构建完成，正在检查输出目录 ./dist 的内容："
            ls -la ./dist || echo "错误：构建失败，./dist 目录不存在或为空"
          fi
        env:
          FLUTTER_ROOT: C:\hostedtoolcache\windows\flutter\stable-3.24.5-x64
          PUB_CACHE: C:\Users\runneradmin\AppData\Local\Pub\Cache

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ matrix.platform }}${{ matrix.arch && format('-{0}', matrix.arch) }}
          path: ./dist
          overwrite: true
