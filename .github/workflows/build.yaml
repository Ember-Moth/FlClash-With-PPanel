name: manual-build

on:
  workflow_dispatch:
    inputs:
      platform:
        description: '选择构建的平台'
        required: false
        type: choice
        options:
          - all
          - android
          - windows
          - linux
          - macos

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - platform: android
            os: ubuntu-latest
          - platform: windows
            os: windows-latest
            arch: amd64
          - platform: linux
            os: ubuntu-latest
            arch: amd64
          - platform: macos
            os: macos-13
            arch: amd64
          - platform: macos
            os: macos-latest
            arch: arm64
      fail-fast: false

    # 修复点：只能使用 inputs 变量，matrix 在 strategy 外无法直接访问
    # 使用 contains() 判断是否执行
    if: ${{ inputs.platform == 'all' || contains(fromJson('["android", "windows", "linux", "macos"]'), inputs.platform) && inputs.platform == matrix.platform }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Create dist directory
        run: mkdir -p dist

      - name: Setup JAVA (Android)
        if: ${{ matrix.platform == 'android' }}
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup NDK (Android)
        if: ${{ matrix.platform == 'android' }}
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r26b
          add-to-path: true
          link-to-sdk: true

      - name: Setup Android Signing
        if: ${{ matrix.platform == 'android' }}
        run: |
          echo "${{ secrets.KEYSTORE }}" | base64 --decode > android/app/keystore.jks
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/local.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/local.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/local.properties

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.24.5
          channel: stable
          cache: true

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Build Project
        run: dart setup.dart ${{ matrix.platform }}${{ matrix.arch && format(' --arch {0}', matrix.arch) }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ matrix.platform }}${{ matrix.arch && format('-{0}', matrix.arch) }}
          path: dist/
          overwrite: true

  upload:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create dist directory
        run: mkdir -p dist

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/
          pattern: artifact-*
          merge-multiple: true

      - name: Upload final build
        uses: actions/upload-artifact@v4
        with:
          name: final-build-output
          path: dist/
          overwrite: true
